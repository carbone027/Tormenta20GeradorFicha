<%- include('../partials/header', { 
  title: (typeof character !== 'undefined' && character) ? `${character.nome} - Ficha` : 'Personagem - Ficha', 
  activePage: 'characterView' 
}) %>

<%
// ===== ADICIONAR A FUNÇÃO AQUI, LOGO APÓS O INCLUDE DO HEADER =====
// Função para gerar ícones de poderes
function getPowerIcon(poder, tipo) {
  const nome = (poder.nome || '').toLowerCase();
  const tipoLower = (tipo || poder.tipo || '').toLowerCase();
  const descricao = (poder.descricao || '').toLowerCase();
  
  // Ícones específicos por palavra-chave no nome
  if (nome.includes('ataque') || nome.includes('golpe')) return '⚔️';
  if (nome.includes('defesa') || nome.includes('proteção')) return '🛡️';
  if (nome.includes('cura') || nome.includes('curar')) return '💚';
  if (nome.includes('fogo') || nome.includes('chamas')) return '🔥';
  if (nome.includes('gelo') || nome.includes('frio')) return '❄️';
  if (nome.includes('raio') || nome.includes('elétrico')) return '⚡';
  if (nome.includes('vento') || nome.includes('ar')) return '💨';
  if (nome.includes('terra') || nome.includes('pedra')) return '🌍';
  if (nome.includes('água') || nome.includes('aquático')) return '💧';
  if (nome.includes('luz') || nome.includes('sagrado')) return '☀️';
  if (nome.includes('trevas') || nome.includes('sombra')) return '🌑';
  if (nome.includes('movimento') || nome.includes('velocidade')) return '🏃';
  if (nome.includes('voo') || nome.includes('voar')) return '🦅';
  if (nome.includes('salto') || nome.includes('pular')) return '🦘';
  if (nome.includes('furtividade') || nome.includes('stealth')) return '👤';
  if (nome.includes('percepção') || nome.includes('visão')) return '👁️';
  if (nome.includes('força') || nome.includes('poder')) return '💪';
  if (nome.includes('garras') || nome.includes('presas')) return '🐾';
  if (nome.includes('asas')) return '🦅';
  if (nome.includes('cauda') || nome.includes('rabo')) return '🦎';
  if (nome.includes('chifres') || nome.includes('cornos')) return '🐂';
  if (nome.includes('pelo') || nome.includes('pelagem')) return '🐺';
  if (nome.includes('escamas') || nome.includes('escamoso')) return '🐍';
  if (nome.includes('veneno') || nome.includes('tóxico')) return '☣️';
  if (nome.includes('maldição') || nome.includes('amaldiçoar')) return '🖤';
  if (nome.includes('bênção') || nome.includes('abençoar')) return '🙏';
  if (nome.includes('sorte') || nome.includes('fortuna')) return '🍀';
  if (nome.includes('conhecimento') || nome.includes('saber')) return '📚';
  if (nome.includes('liderança') || nome.includes('comando')) return '👑';
  if (nome.includes('intimidação') || nome.includes('medo')) return '😠';
  if (nome.includes('persuasão') || nome.includes('convencer')) return '💬';
  if (nome.includes('diplomacia') || nome.includes('negociar')) return '🤝';
  if (nome.includes('tiro') || nome.includes('disparo')) return '🏹';
  if (nome.includes('crítico') || nome.includes('mortal')) return '💀';
  if (nome.includes('regeneração') || nome.includes('recuperar')) return '🌿';
  if (nome.includes('aura') || nome.includes('presença')) return '🌟';
  if (nome.includes('ritual') || nome.includes('cerimônia')) return '🕯️';
  if (nome.includes('runa') || nome.includes('marca')) return '📜';
  if (nome.includes('animal') || nome.includes('besta')) return '🐺';
  if (nome.includes('natureza') || nome.includes('selvagem')) return '🌿';
  if (nome.includes('caça') || nome.includes('rastrear')) return '🏹';
  if (nome.includes('heroico') || nome.includes('épico')) return '🏆';
  if (nome.includes('lendário') || nome.includes('mítico')) return '👑';
  if (nome.includes('tormenta') || nome.includes('corrupção')) return '💀';
  if (nome.includes('investida') || nome.includes('carga')) return '🏇';
  if (nome.includes('combo') || nome.includes('sequência')) return '🌀';
  if (nome.includes('rajada') || nome.includes('múltiplo')) return '💨';
  if (nome.includes('bloqueio') || nome.includes('parar')) return '🚫';
  if (nome.includes('esquiva') || nome.includes('desviar')) return '💨';
  if (nome.includes('absorção') || nome.includes('absorver')) return '🌀';
  if (nome.includes('teleporte') || nome.includes('transportar')) return '⚡';
  if (nome.includes('escalada') || nome.includes('escalar')) return '🧗';
  if (nome.includes('natação') || nome.includes('nadar')) return '🏊';
  if (nome.includes('acrobacia') || nome.includes('acrobático')) return '🤸';
  if (nome.includes('atletismo') || nome.includes('atlético')) return '💪';
  if (nome.includes('investigação') || nome.includes('investigar')) return '🔍';
  if (nome.includes('enganação') || nome.includes('enganar')) return '🎭';
  if (nome.includes('faro') || nome.includes('olfato')) return '👃';
  if (nome.includes('audição') || nome.includes('ouvir')) return '👂';
  
  // Ícones por tipo com variação
  const iconsByType = {
    'combate': ['⚔️', '🗡️', '🏹', '💪', '👊', '🛡️', '💥', '⚡'],
    'magia': ['🔮', '✨', '🪄', '🌟', '⚡', '🔥', '❄️', '💫'],
    'destino': ['🌟', '🎯', '💫', '🍀', '📈', '🎲', '💎', '⭐'],
    'racial': ['🧬', '👁️', '🦅', '🐺', '🌿', '⚡', '🐾', '💪'],
    'geral': ['⚡', '💡', '🔧', '🎯', '📚', '🏃', '💪', '🌟'],
    'concedido': ['⭐', '🙏', '✨', '💫', '🌟', '👑', '💎', '🔸'],
    'tormenta': ['💀', '☠️', '🖤', '👻', '🌑', '⚡', '💥', '🔥'],
    'classe': ['⚔️', '🛡️', '🏹', '💪', '🌟', '⚡', '🔥', '✨']
  };
  
  if (iconsByType[tipoLower]) {
    const icons = iconsByType[tipoLower];
    let hash = 0;
    for (let i = 0; i < nome.length; i++) {
      hash = ((hash << 5) - hash + nome.charCodeAt(i)) & 0xffffffff;
    }
    return icons[Math.abs(hash) % icons.length];
  }
  
  // Análise da descrição
  if (descricao.includes('dano') || descricao.includes('ataque')) return '⚔️';
  if (descricao.includes('cura') || descricao.includes('recupera')) return '💚';
  if (descricao.includes('movimento') || descricao.includes('mover')) return '🏃';
  if (descricao.includes('defesa') || descricao.includes('ca')) return '🛡️';
  if (descricao.includes('magia')) return '🔮';
  if (descricao.includes('perícia')) return '🎯';
  
  // Ícone padrão único
  const fallbackIcons = ['⚡', '✨', '🌟', '💫', '🔸', '🔹', '💎', '🎭', '🎯', '🔧'];
  let charSum = 0;
  for (let i = 0; i < nome.length; i++) {
    charSum += nome.charCodeAt(i);
  }
  return fallbackIcons[charSum % fallbackIcons.length];
}
// ===== FIM DA FUNÇÃO =====
%>

<% if (typeof character !== 'undefined' && character) { %>
  <section class="content-section active character-sheet">
    <!-- Header do Personagem -->
    <div class="character-header-section">
      <div class="character-main-info">
        <div class="character-portrait">
          <% 
            // Ícone baseado na classe
            let classeIcon = '⚔️';
            if (character.classe_nome) {
              switch(character.classe_nome.toLowerCase()) {
                case 'guerreiro': classeIcon = '⚔️'; break;
                case 'ladino': classeIcon = '🗡️'; break;
                case 'arcanista': classeIcon = '🔮'; break;
                case 'clérico': classeIcon = '✨'; break;
                case 'bárbaro': classeIcon = '🪓'; break;
                case 'bardo': classeIcon = '🎵'; break;
                default: classeIcon = '⚔️';
              }
            }
          %>
          <div class="portrait-icon"><%= classeIcon %></div>
          <div class="level-badge">Nível <%= character.nivel || 1 %></div>
        </div>
        
        <div class="character-identity">
          <h1 class="character-name"><%= character.nome %></h1>
          <p class="character-class-race">
            <%= character.classe_nome || 'Classe' %> <%= character.raca_nome || 'Raça' %>
          </p>
          <% if (character.deus_nome) { %>
            <p class="character-deity">⭐ Devoto de <%= character.deus_nome %></p>
          <% } %>
          <% if (character.experiencia && character.experiencia > 0) { %>
            <p class="character-xp">🌟 <%= character.experiencia %> XP</p>
          <% } %>
        </div>
        
        <div class="character-actions">
          <a href="/personagens/<%= character.id %>/editar" class="action-btn edit-btn">
            ✏️ Editar Personagem
          </a>
          <a href="/personagens" class="action-btn back-btn">
            ← Meus Personagens
          </a>
        </div>
      </div>
    </div>

    <!-- Características Principais -->
    <div class="main-characteristics">
      <div class="characteristic-card vital-stats">
        <h3>💙 Características Vitais</h3>
        <div class="vital-grid">
          <div class="vital-item pv">
            <div class="vital-icon">❤️</div>
            <div class="vital-info">
              <span class="vital-value"><%= character.pontos_vida || 0 %></span>
              <span class="vital-label">Pontos de Vida</span>
            </div>
          </div>
          
          <% if (character.pontos_mana && character.pontos_mana > 0) { %>
            <div class="vital-item pm">
              <div class="vital-icon">🔵</div>
              <div class="vital-info">
                <span class="vital-value"><%= character.pontos_mana %></span>
                <span class="vital-label">Pontos de Mana</span>
              </div>
            </div>
          <% } %>
          
          <div class="vital-item ca">
            <div class="vital-icon">🛡️</div>
            <div class="vital-info">
              <span class="vital-value"><%= character.ca || 10 %></span>
              <span class="vital-label">Classe de Armadura</span>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Atributos -->
    <div class="attributes-section">
      <h3>💪 Atributos</h3>
      <div class="attributes-grid">
        <div class="attribute-card">
          <div class="attr-icon">💪</div>
          <div class="attr-info">
            <span class="attr-name">Força</span>
            <span class="attr-value"><%= character.forca || 10 %></span>
            <span class="attr-modifier">
              <% 
                const forcaMod = Math.floor(((character.forca || 10) - 10) / 2);
                const forcaModText = forcaMod >= 0 ? '+' + forcaMod : forcaMod;
              %>
              (<%= forcaModText %>)
            </span>
          </div>
        </div>
        
        <div class="attribute-card">
          <div class="attr-icon">🏃</div>
          <div class="attr-info">
            <span class="attr-name">Destreza</span>
            <span class="attr-value"><%= character.destreza || 10 %></span>
            <span class="attr-modifier">
              <% 
                const destrezaMod = Math.floor(((character.destreza || 10) - 10) / 2);
                const destrezaModText = destrezaMod >= 0 ? '+' + destrezaMod : destrezaMod;
              %>
              (<%= destrezaModText %>)
            </span>
          </div>
        </div>
        
        <div class="attribute-card">
          <div class="attr-icon">❤️‍🔥</div>
          <div class="attr-info">
            <span class="attr-name">Constituição</span>
            <span class="attr-value"><%= character.constituicao || 10 %></span>
            <span class="attr-modifier">
              <% 
                const constMod = Math.floor(((character.constituicao || 10) - 10) / 2);
                const constModText = constMod >= 0 ? '+' + constMod : constMod;
              %>
              (<%= constModText %>)
            </span>
          </div>
        </div>
        
        <div class="attribute-card">
          <div class="attr-icon">🧠</div>
          <div class="attr-info">
            <span class="attr-name">Inteligência</span>
            <span class="attr-value"><%= character.inteligencia || 10 %></span>
            <span class="attr-modifier">
              <% 
                const intMod = Math.floor(((character.inteligencia || 10) - 10) / 2);
                const intModText = intMod >= 0 ? '+' + intMod : intMod;
              %>
              (<%= intModText %>)
            </span>
          </div>
        </div>
        
        <div class="attribute-card">
          <div class="attr-icon">🧙</div>
          <div class="attr-info">
            <span class="attr-name">Sabedoria</span>
            <span class="attr-value"><%= character.sabedoria || 10 %></span>
            <span class="attr-modifier">
              <% 
                const sabMod = Math.floor(((character.sabedoria || 10) - 10) / 2);
                const sabModText = sabMod >= 0 ? '+' + sabMod : sabMod;
              %>
              (<%= sabModText %>)
            </span>
          </div>
        </div>
        
        <div class="attribute-card">
          <div class="attr-icon">😎</div>
          <div class="attr-info">
            <span class="attr-name">Carisma</span>
            <span class="attr-value"><%= character.carisma || 10 %></span>
            <span class="attr-modifier">
              <% 
                const carMod = Math.floor(((character.carisma || 10) - 10) / 2);
                const carModText = carMod >= 0 ? '+' + carMod : carMod;
              %>
              (<%= carModText %>)
            </span>
          </div>
        </div>
      </div>
    </div>

    <!-- Perícias do Personagem -->
<% 
  // DEBUG: Verificar dados de perícias
  console.log('🔍 ===== DEBUG PERÍCIAS CHARACTER-VIEW =====');
  console.log('  - pericias definido:', typeof pericias !== 'undefined');
  console.log('  - pericias é array:', Array.isArray(pericias));
  console.log('  - quantidade de pericias:', pericias ? pericias.length : 0);
  console.log('  - periciasPorCategoria definido:', typeof periciasPorCategoria !== 'undefined');
  console.log('  - categorias disponíveis:', periciasPorCategoria ? Object.keys(periciasPorCategoria) : 'nenhuma');
  
  if (pericias && pericias.length > 0) {
    console.log('  📋 Lista de perícias:');
    pericias.forEach((pericia, index) => {
      console.log(`    ${index + 1}. ${pericia.nome} (${pericia.origem}) - Bônus: +${pericia.bonus_total || 0}`);
    });
  }
  console.log('===========================================');
%>

<div class="character-skills-section">
  <div class="character-skills-header">
    <h3 class="character-skills-title">
      <span>🎯</span>
      Perícias do Personagem
      <span>🎯</span>
    </h3>
    
    <% if (typeof pericias !== 'undefined' && pericias && pericias.length > 0) { %>
      <p class="character-skills-count">
        <%= pericias.length %> <%= pericias.length === 1 ? 'perícia ativa' : 'perícias ativas' %>
      </p>
      
      <!-- Resumo rápido de perícias treinadas -->
      <% 
        const periciasTreeinadas = pericias.filter(p => p.treinado);
        const periciasEspecialistas = pericias.filter(p => p.especialista);
      %>
      <div class="skills-summary-badges">
        <span class="skill-summary-badge trained">
          🎯 <%= periciasTreeinadas.length %> Treinada<%= periciasTreeinadas.length !== 1 ? 's' : '' %>
        </span>
        <% if (periciasEspecialistas.length > 0) { %>
          <span class="skill-summary-badge expert">
            ⭐ <%= periciasEspecialistas.length %> Especialista<%= periciasEspecialistas.length !== 1 ? 's' : '' %>
          </span>
        <% } %>
      </div>
    <% } else { %>
      <p class="character-skills-count">
        Nenhuma perícia configurada
      </p>
    <% } %>
  </div>

  <!-- Debug Info (apenas em desenvolvimento) -->
  <% if (process.env.NODE_ENV === 'development' || (typeof debug !== 'undefined' && debug)) { %>
    <div class="debug-info" style="background: rgba(255, 255, 0, 0.1); border: 1px solid yellow; padding: 1rem; margin: 1rem 0; border-radius: 8px; font-family: monospace; font-size: 0.8rem;">
      <strong>🔧 DEBUG PERÍCIAS:</strong><br>
      - Pericias: <%= typeof pericias %> (<%= pericias ? pericias.length : 0 %> itens)<br>
      - PericiasPorCategoria: <%= typeof periciasPorCategoria %> (<%= periciasPorCategoria ? Object.keys(periciasPorCategoria).length : 0 %> categorias)<br>
      - Character ID: <%= character ? character.id : 'undefined' %><br>
      - Nível: <%= character ? character.nivel : 'undefined' %><br>
      <% if (periciasPorCategoria && Object.keys(periciasPorCategoria).length > 0) { %>
        - Categorias encontradas: <%= Object.keys(periciasPorCategoria).join(', ') %><br>
      <% } %>
    </div>
  <% } %>

  <!-- CASO 1: TEM PERÍCIAS PARA EXIBIR -->
  <% if (typeof pericias !== 'undefined' && pericias && pericias.length > 0) { %>
    
    <!-- Explicação do Sistema -->
    <div class="skills-explanation">
      <div class="card explanation-card">
        <h4>📋 Como Funcionam as Perícias</h4>
        <div class="explanation-grid">
          <div class="explanation-item">
            <h5>🎲 Teste de Perícia</h5>
            <p><strong>1d20 + Metade do Nível + Atributo + Bônus de Treinamento</strong></p>
          </div>
          <div class="explanation-item">
            <h5>💪 Bônus de Treinamento</h5>
            <p>Níveis 1-6: +2 | Níveis 7-14: +4 | Níveis 15+: +6</p>
          </div>
          <div class="explanation-item">
            <h5>⭐ Especialista (Ladino)</h5>
            <p>Recebe o bônus de treinamento em dobro</p>
          </div>
          <div class="explanation-item">
            <h5>📊 Seu Nível</h5>
            <p>Nível <%= character.nivel || 1 %> = +<%= Math.floor((character.nivel || 1) / 2) %> de bônus</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Filtros para Visualização -->
    <div class="skills-quick-filters">
      <div class="quick-filters-title">🎯 Filtros Rápidos</div>
      <div class="quick-filters-buttons">
        <button type="button" class="quick-filter-btn active" data-filter="all">
          ✨ Todas (<%= pericias.length %>)
        </button>
        
        <button type="button" class="quick-filter-btn" data-filter="trained">
          🎯 Treinadas (<%= pericias.filter(p => p.treinado).length %>)
        </button>
        
        <% if (pericias.some(p => p.especialista)) { %>
          <button type="button" class="quick-filter-btn" data-filter="expert">
            ⭐ Especialistas (<%= pericias.filter(p => p.especialista).length %>)
          </button>
        <% } %>
        
        <!-- Filtros dinâmicos baseados nas origens existentes -->
        <% if (pericias.some(p => p.origem === 'classe')) { %>
          <button type="button" class="quick-filter-btn" data-filter="classe">
            ⚔️ Classe (<%= pericias.filter(p => p.origem === 'classe').length %>)
          </button>
        <% } %>
        
        <% if (pericias.some(p => p.origem === 'escolha')) { %>
          <button type="button" class="quick-filter-btn" data-filter="escolha">
            📚 Escolhidas (<%= pericias.filter(p => p.origem === 'escolha').length %>)
          </button>
        <% } %>
        
        <% if (pericias.some(p => p.origem === 'inteligencia')) { %>
          <button type="button" class="quick-filter-btn" data-filter="inteligencia">
            🧠 Inteligência (<%= pericias.filter(p => p.origem === 'inteligencia').length %>)
          </button>
        <% } %>
      </div>
    </div>

    <!-- Organização por Categoria -->
    <% if (periciasPorCategoria && Object.keys(periciasPorCategoria).length > 0) { %>
      <div class="skills-by-category">
        <% Object.entries(periciasPorCategoria).forEach(([categoria, periciasCategoria]) => { %>
          <% if (periciasCategoria && periciasCategoria.length > 0) { %>
            <div class="character-skill-category-section" 
                 data-category="<%= categoria %>">
              <div class="skill-category-header">
                <h4 class="character-skill-category-title">
                  <% 
                    let categoryIcon = '🎯';
                    let categoryName = categoria;
                    switch(categoria.toLowerCase()) {
                      case 'física': 
                        categoryIcon = '🏃'; 
                        categoryName = 'Perícias Físicas'; 
                        break;
                      case 'combate': 
                        categoryIcon = '⚔️'; 
                        categoryName = 'Perícias de Combate'; 
                        break;
                      case 'conhecimento': 
                        categoryIcon = '📚'; 
                        categoryName = 'Perícias de Conhecimento'; 
                        break;
                      case 'social': 
                        categoryIcon = '💬'; 
                        categoryName = 'Perícias Sociais'; 
                        break;
                      case 'percepção': 
                        categoryIcon = '👁️'; 
                        categoryName = 'Perícias de Percepção'; 
                        break;
                      case 'resistência': 
                        categoryIcon = '🛡️'; 
                        categoryName = 'Perícias de Resistência'; 
                        break;
                      case 'medicina': 
                        categoryIcon = '💚'; 
                        categoryName = 'Perícias de Medicina'; 
                        break;
                      case 'geral':
                        categoryIcon = '🎯';
                        categoryName = 'Perícias Gerais';
                        break;
                      default:
                        categoryIcon = '🎯';
                        categoryName = categoria.charAt(0).toUpperCase() + categoria.slice(1);
                        break;
                    }
                  %>
                  <span><%= categoryIcon %></span>
                  <%= categoryName %>
                </h4>
                <div class="skill-category-count">
                  (<%= periciasCategoria.length %> <%= periciasCategoria.length === 1 ? 'perícia' : 'perícias' %>)
                </div>
                <button type="button" class="skill-category-toggle" data-target="<%= categoria %>">
                  <span class="toggle-icon">📂</span>
                </button>
              </div>
              
              <div class="skills-list" id="skillsGrid-<%= categoria %>">
                <% periciasCategoria.forEach(pericia => { %>
                  <div class="character-skill-card" 
                       data-origin="<%= pericia.origem || 'geral' %>" 
                       data-category="<%= pericia.categoria || 'geral' %>"
                       data-trained="<%= pericia.treinado %>"
                       data-expert="<%= pericia.especialista || false %>">
                    
                    <div class="character-skill-header">
                      <div class="skill-main-info">
                        <h5 class="character-skill-name">
                          <% 
                            // Ícone da perícia
                            let skillIcon = '🎯';
                            const nome = (pericia.nome || '').toLowerCase();
                            
                            if (nome.includes('acrobacia')) skillIcon = '🤸';
                            else if (nome.includes('atletismo')) skillIcon = '💪';
                            else if (nome.includes('cavalgar')) skillIcon = '🐎';
                            else if (nome.includes('furtividade')) skillIcon = '👤';
                            else if (nome.includes('iniciativa')) skillIcon = '⚡';
                            else if (nome.includes('ladinagem')) skillIcon = '🔓';
                            else if (nome.includes('luta')) skillIcon = '👊';
                            else if (nome.includes('pilotagem')) skillIcon = '🚗';
                            else if (nome.includes('pontaria')) skillIcon = '🏹';
                            else if (nome.includes('reflexos')) skillIcon = '🤺';
                            else if (nome.includes('conhecimento')) skillIcon = '📚';
                            else if (nome.includes('guerra')) skillIcon = '⚔️';
                            else if (nome.includes('investigação')) skillIcon = '🔍';
                            else if (nome.includes('misticismo')) skillIcon = '🔮';
                            else if (nome.includes('nobreza')) skillIcon = '👑';
                            else if (nome.includes('ofício')) skillIcon = '🔨';
                            else if (nome.includes('religião')) skillIcon = '🙏';
                            else if (nome.includes('adestramento')) skillIcon = '🐕';
                            else if (nome.includes('atuação')) skillIcon = '🎭';
                            else if (nome.includes('diplomacia')) skillIcon = '🤝';
                            else if (nome.includes('enganação')) skillIcon = '🎭';
                            else if (nome.includes('intimidação')) skillIcon = '😠';
                            else if (nome.includes('jogatina')) skillIcon = '🎲';
                            else if (nome.includes('cura')) skillIcon = '💚';
                            else if (nome.includes('intuição')) skillIcon = '💡';
                            else if (nome.includes('percepção')) skillIcon = '👁️';
                            else if (nome.includes('sobrevivência')) skillIcon = '🏕️';
                            else if (nome.includes('fortitude')) skillIcon = '🛡️';
                            else if (nome.includes('vontade')) skillIcon = '🧠';
                          %>
                          <%= skillIcon %> <%= pericia.nome %>
                        </h5>
                        
                        <div class="skill-bonus-display">
                          <span class="skill-bonus-value">+<%= pericia.bonus_total || 0 %></span>
                          <span class="skill-bonus-label">Bônus Total</span>
                        </div>
                      </div>
                      
                      <div class="skill-status-badges">
                        <% if (pericia.treinado) { %>
                          <span class="skill-status-badge trained">🎯 Treinada</span>
                        <% } else { %>
                          <span class="skill-status-badge untrained">❌ Não Treinada</span>
                        <% } %>
                        
                        <% if (pericia.especialista) { %>
                          <span class="skill-status-badge expert">⭐ Especialista</span>
                        <% } %>
                        
                        <% 
                          let originIcon = '📝';
                          let originText = pericia.origem || 'geral';
                          switch(pericia.origem) {
                            case 'classe': originIcon = '⚔️'; originText = 'Classe'; break;
                            case 'escolha': originIcon = '📚'; originText = 'Escolhida'; break;
                            case 'inteligencia': originIcon = '🧠'; originText = 'Inteligência'; break;
                            case 'raca': originIcon = '🧬'; originText = 'Racial'; break;
                            default: originIcon = '📝'; originText = 'Outro'; break;
                          }
                        %>
                        <span class="skill-origin-badge">
                          <%= originIcon %> <%= originText %>
                        </span>
                      </div>
                    </div>
                    
                    <div class="character-skill-details">
                      <!-- Cálculo detalhado do bônus -->
                      <div class="skill-bonus-breakdown">
                        <h6>📊 Cálculo do Bônus</h6>
                        <div class="bonus-breakdown-grid">
                          <div class="bonus-item">
                            <span class="bonus-label">📊 Nível (÷2)</span>
                            <span class="bonus-value">+<%= pericia.bonus_nivel || 0 %></span>
                          </div>
                          
                          <div class="bonus-item">
                            <span class="bonus-label">
                              <% 
                                let attrIcon = '🎯';
                                let attrName = pericia.atributo_chave || 'N/A';
                                switch(pericia.atributo_chave) {
                                  case 'for': attrIcon = '💪'; attrName = 'Força'; break;
                                  case 'des': attrIcon = '🏃'; attrName = 'Destreza'; break;
                                  case 'con': attrIcon = '❤️'; attrName = 'Constituição'; break;
                                  case 'int': attrIcon = '🧠'; attrName = 'Inteligência'; break;
                                  case 'sab': attrIcon = '🧙'; attrName = 'Sabedoria'; break;
                                  case 'car': attrIcon = '😎'; attrName = 'Carisma'; break;
                                }
                              %>
                              <%= attrIcon %> <%= attrName %>
                            </span>
                            <span class="bonus-value">
                              <%= pericia.bonus_atributo >= 0 ? '+' : '' %><%= pericia.bonus_atributo || 0 %>
                            </span>
                          </div>
                          
                          <% if (pericia.treinado) { %>
                            <div class="bonus-item">
                              <span class="bonus-label">🎯 Treinamento</span>
                              <span class="bonus-value">+<%= pericia.bonus_treinamento || 0 %></span>
                            </div>
                          <% } %>
                          
                          <% if (pericia.especialista) { %>
                            <div class="bonus-item expert">
                              <span class="bonus-label">⭐ Especialista</span>
                              <span class="bonus-value">+<%= pericia.bonus_treinamento || 0 %></span>
                            </div>
                          <% } %>
                          
                          <div class="bonus-item total">
                            <span class="bonus-label"><strong>🎲 Total</strong></span>
                            <span class="bonus-value"><strong>+<%= pericia.bonus_total || 0 %></strong></span>
                          </div>
                        </div>
                      </div>
                      
                      <!-- Descrição da perícia -->
                      <% if (pericia.descricao) { %>
                        <div class="skill-description">
                          <h6>📝 Descrição</h6>
                          <p><%= pericia.descricao %></p>
                        </div>
                      <% } %>
                      
                      <!-- Observações -->
                      <% if (pericia.observacoes) { %>
                        <div class="skill-notes">
                          <h6>📋 Observações</h6>
                          <p><%= pericia.observacoes %></p>
                        </div>
                      <% } %>
                    </div>
                    
                    <!-- Tags informativos -->
                    <div class="skill-tags" style="margin-top: 1rem;">
                      <span class="skill-tag category">
                        <%= categoryName.replace('Perícias ', '') %>
                      </span>
                      
                      <span class="skill-tag attribute">
                        <%= attrIcon %> <%= attrName %>
                      </span>
                      
                      <span class="skill-tag origin">
                        <%= originIcon %> <%= originText %>
                      </span>
                      
                      <% if (pericia.treinado) { %>
                        <span class="skill-tag trained">
                          🎯 Treinada
                        </span>
                      <% } %>
                      
                      <% if (pericia.especialista) { %>
                        <span class="skill-tag expert">
                          ⭐ Especialista
                        </span>
                      <% } %>
                      
                      <span class="skill-tag bonus">
                        🎲 +<%= pericia.bonus_total || 0 %>
                      </span>
                    </div>
                  </div>
                <% }); %>
              </div>
            </div>
          <% } %>
        <% }); %>
      </div>
    <% } else { %>
      <!-- Lista simples (fallback se não há organização por categoria) -->
      <div class="skills-list">
        <% pericias.forEach(pericia => { %>
          <div class="character-skill-card" 
               data-origin="<%= pericia.origem %>" 
               data-category="<%= pericia.categoria || 'geral' %>"
               data-trained="<%= pericia.treinado %>"
               data-expert="<%= pericia.especialista || false %>">
            
            <div class="character-skill-header">
              <h5 class="character-skill-name">
                🎯 <%= pericia.nome %>
              </h5>
              
              <div class="skill-bonus-display">
                <span class="skill-bonus-value">+<%= pericia.bonus_total || 0 %></span>
              </div>
            </div>
            
            <div class="character-skill-details">
              <% if (pericia.observacoes) { %>
                <p><%= pericia.observacoes %></p>
              <% } %>
            </div>
          </div>
        <% }); %>
      </div>
    <% } %>
    
    <!-- Resumo das Perícias -->
    <div class="skills-summary" style="margin-top: 2rem; padding: 1.5rem; background: rgba(212, 175, 55, 0.1); border: 2px solid var(--accent-gold); border-radius: 12px;">
      <h4 style="color: var(--accent-gold); margin-bottom: 1rem; text-align: center;">
        📊 Resumo das Perícias
      </h4>
      
      <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem;">
        <% 
          // Calcular estatísticas
          const totalPericias = pericias.length;
          const periciasTreeinadasCount = pericias.filter(p => p.treinado).length;
          const periciasEspecialistasCount = pericias.filter(p => p.especialista).length;
          const bonusMedio = pericias.length > 0 ? Math.round(pericias.reduce((sum, p) => sum + (p.bonus_total || 0), 0) / pericias.length) : 0;
          const melhorBonus = pericias.length > 0 ? Math.max(...pericias.map(p => p.bonus_total || 0)) : 0;
        %>
        
        <div class="summary-item" style="text-align: center; background: rgba(37, 40, 80, 0.6); padding: 1rem; border-radius: 8px;">
          <div style="font-size: 2rem; margin-bottom: 0.5rem;">📊</div>
          <div style="color: var(--accent-gold); font-weight: bold; font-size: 1.8rem;"><%= totalPericias %></div>
          <div style="color: var(--text-muted); font-size: 0.9rem;">Total de Perícias</div>
        </div>
        
        <div class="summary-item" style="text-align: center; background: rgba(37, 40, 80, 0.6); padding: 1rem; border-radius: 8px;">
          <div style="font-size: 2rem; margin-bottom: 0.5rem;">🎯</div>
          <div style="color: var(--accent-gold); font-weight: bold; font-size: 1.8rem;"><%= periciasTreeinadasCount %></div>
          <div style="color: var(--text-muted); font-size: 0.9rem;">Treinadas</div>
        </div>
        
        <% if (periciasEspecialistasCount > 0) { %>
          <div class="summary-item" style="text-align: center; background: rgba(37, 40, 80, 0.6); padding: 1rem; border-radius: 8px;">
            <div style="font-size: 2rem; margin-bottom: 0.5rem;">⭐</div>
            <div style="color: var(--accent-gold); font-weight: bold; font-size: 1.8rem;"><%= periciasEspecialistasCount %></div>
            <div style="color: var(--text-muted); font-size: 0.9rem;">Especialistas</div>
          </div>
        <% } %>
        
        <div class="summary-item" style="text-align: center; background: rgba(37, 40, 80, 0.6); padding: 1rem; border-radius: 8px;">
          <div style="font-size: 2rem; margin-bottom: 0.5rem;">🎲</div>
          <div style="color: var(--accent-gold); font-weight: bold; font-size: 1.8rem;">+<%= melhorBonus %></div>
          <div style="color: var(--text-muted); font-size: 0.9rem;">Melhor Bônus</div>
        </div>
        
        <div class="summary-item" style="text-align: center; background: rgba(37, 40, 80, 0.6); padding: 1rem; border-radius: 8px;">
          <div style="font-size: 2rem; margin-bottom: 0.5rem;">📈</div>
          <div style="color: var(--accent-gold); font-weight: bold; font-size: 1.8rem;">+<%= bonusMedio %></div>
          <div style="color: var(--text-muted); font-size: 0.9rem;">Bônus Médio</div>
        </div>
      </div>
    </div>

  <!-- CASO 2: SEM PERÍCIAS -->
  <% } else { %>
    <div class="skills-empty-state">
      <div class="skills-empty-icon">📜</div>
      <h4 class="skills-empty-title">Nenhuma Perícia Configurada</h4>
      <p class="skills-empty-description">
        Este personagem ainda não possui perícias configuradas.
        <br>
        <% if (character && character.classe_nome) { %>
          <strong>Classe:</strong> <%= character.classe_nome %> - <strong>Nível:</strong> <%= character.nivel || 1 %>
          <br>
        <% } %>
        <strong>💡 Dica:</strong> Use a edição para configurar as perícias do personagem.
        <br>
        <a href="/personagens/<%= character.id %>/editar" style="color: var(--accent-gold); text-decoration: none;">
          ✏️ Editar personagem para configurar perícias
        </a>
      </p>

      <!-- Ações rápidas -->
      <div style="margin-top: 1rem;">
        <a href="/personagens/<%= character.id %>/editar" class="btn btn-secondary">
          ✏️ Configurar Perícias
        </a>
      </div>
    </div>
  <% } %>
</div>

    <!-- Poderes -->
<% 
  // DEBUG: Log para verificar dados recebidos
  console.log('🔍 DEBUG character-view:');
  console.log('  - poderes definido:', typeof poderes !== 'undefined');
  console.log('  - poderes é array:', Array.isArray(poderes));
  console.log('  - quantidade de poderes:', poderes ? poderes.length : 0);
  console.log('  - poderesPorTipo definido:', typeof poderesPorTipo !== 'undefined');
  console.log('  - tipos disponíveis:', poderesPorTipo ? Object.keys(poderesPorTipo) : 'nenhum');
%>

<!-- SEÇÃO DE PODERES - CORREÇÃO FINAL para character-view.ejs -->
<!-- Substituir a seção de poderes existente -->

<% 
  // DEBUG MELHORADO: Verificar dados recebidos
  console.log('🔍 ===== DEBUG CHARACTER-VIEW (FINAL) =====');
  console.log('  - character definido:', typeof character !== 'undefined');
  console.log('  - character.id:', character ? character.id : 'undefined');
  console.log('  - character.nome:', character ? character.nome : 'undefined');
  console.log('  - poderes definido:', typeof poderes !== 'undefined');
  console.log('  - poderes é array:', Array.isArray(poderes));
  console.log('  - quantidade de poderes:', poderes ? poderes.length : 0);
  console.log('  - poderesPorTipo definido:', typeof poderesPorTipo !== 'undefined');
  console.log('  - tipos disponíveis:', poderesPorTipo ? Object.keys(poderesPorTipo) : 'nenhum');
  
  if (poderes && poderes.length > 0) {
    console.log('  📋 Lista de poderes:');
    poderes.forEach((poder, index) => {
      console.log(`    ${index + 1}. ${poder.nome} (${poder.fonte}) - ${poder.descricao ? poder.descricao.substring(0, 50) + '...' : 'sem descrição'}`);
    });
  }
  
  if (typeof debug !== 'undefined') {
    console.log('  🔧 Debug extra:', debug);
  }
  console.log('===========================================');
%>

<!-- Poderes do Personagem -->
<div class="character-powers-section">
  <div class="character-powers-header">
    <h3 class="character-powers-title">
      <span>✨</span>
      Poderes do Personagem
      <span>✨</span>
    </h3>
    
    <% if (typeof poderes !== 'undefined' && poderes && poderes.length > 0) { %>
      <p class="character-powers-count">
        <%= poderes.length %> <%= poderes.length === 1 ? 'poder ativo' : 'poderes ativos' %>
      </p>
    <% } else { %>
      <p class="character-powers-count">
        Nenhum poder ativo
      </p>
    <% } %>
  </div>

  <!-- Debug Info (apenas em desenvolvimento) -->
  <% if (process.env.NODE_ENV === 'development' || (typeof debug !== 'undefined' && debug)) { %>
    <div class="debug-info" style="background: rgba(255, 255, 0, 0.1); border: 1px solid yellow; padding: 1rem; margin: 1rem 0; border-radius: 8px; font-family: monospace; font-size: 0.8rem;">
      <strong>🔧 DEBUG INFO:</strong><br>
      - Poderes: <%= typeof poderes %> (<%= poderes ? poderes.length : 0 %> itens)<br>
      - PoderesPorTipo: <%= typeof poderesPorTipo %> (<%= poderesPorTipo ? Object.keys(poderesPorTipo).length : 0 %> tipos)<br>
      - Character ID: <%= character ? character.id : 'undefined' %><br>
      - Classe ID: <%= character ? character.classe_id : 'undefined' %><br>
      - Nível: <%= character ? character.nivel : 'undefined' %><br>
      <% if (typeof debug !== 'undefined') { %>
        - Debug extra: <%= JSON.stringify(debug) %><br>
      <% } %>
      <% if (poderesPorTipo && Object.keys(poderesPorTipo).length > 0) { %>
        - Fontes encontradas: <%= Object.keys(poderesPorTipo).join(', ') %><br>
      <% } %>
    </div>
  <% } %>

  <!-- CASO 1: TEM PODERES PARA EXIBIR -->
  <% if (typeof poderes !== 'undefined' && poderes && poderes.length > 0) { %>
    
    <!-- Filtros para Visualização -->
    <div class="powers-quick-filters">
      <div class="quick-filters-title">🎯 Filtros Rápidos</div>
      <div class="quick-filters-buttons">
        <button type="button" class="quick-filter-btn active" data-filter="all">
          ✨ Todos (<%= poderes.length %>)
        </button>
        
        <!-- Filtros dinâmicos baseados nos tipos existentes -->
        <% if (poderesPorTipo) { %>
          <% Object.entries(poderesPorTipo).forEach(([fonte, lista]) => { %>
            <% if (lista && lista.length > 0) { %>
              <% 
                let sourceIcon = '📝';
                let sourceName = fonte;
                switch(fonte) {
                  case 'raca': sourceIcon = '🧬'; sourceName = 'Raciais'; break;
                  case 'classe': sourceIcon = '⚔️'; sourceName = 'Classe'; break;
                  case 'escolha': sourceIcon = '⚡'; sourceName = 'Escolhidos'; break;
                  case 'deus': sourceIcon = '⭐'; sourceName = 'Divinos'; break;
                  default: sourceIcon = '📝'; sourceName = fonte.charAt(0).toUpperCase() + fonte.slice(1); break;
                }
              %>
              <button type="button" class="quick-filter-btn" data-filter="<%= fonte %>">
                <%= sourceIcon %> <%= sourceName %> (<%= lista.length %>)
              </button>
            <% } %>
          <% }); %>
        <% } %>
      </div>
    </div>

    <!-- Organização por Fonte/Tipo -->
    <% if (poderesPorTipo && Object.keys(poderesPorTipo).length > 0) { %>
      <div class="powers-by-source">
        <% Object.entries(poderesPorTipo).forEach(([fonte, poderesFonte]) => { %>
          <% if (poderesFonte && poderesFonte.length > 0) { %>
            <div class="character-power-type-section" 
                 data-source="<%= fonte %>" 
                 data-type="<%= fonte %>">
              <div class="power-type-header">
                <h4 class="character-power-type-title">
                  <% 
                    let sourceIcon = '✨';
                    let sourceName = fonte;
                    switch(fonte) {
                      case 'raca': 
                        sourceIcon = '🧬'; 
                        sourceName = 'Poderes Raciais'; 
                        break;
                      case 'classe': 
                        sourceIcon = '⚔️'; 
                        sourceName = 'Poderes de Classe'; 
                        break;
                      case 'escolha': 
                        sourceIcon = '⚡'; 
                        sourceName = 'Poderes Escolhidos'; 
                        break;
                      case 'deus': 
                        sourceIcon = '⭐'; 
                        sourceName = 'Poderes Divinos'; 
                        break;
                      default:
                        sourceIcon = '📝'; 
                        sourceName = 'Outros Poderes'; 
                        break;
                    }
                  %>
                  <span><%= sourceIcon %></span>
                  <%= sourceName %>
                </h4>
                <div class="power-type-count">
                  (<%= poderesFonte.length %> <%= poderesFonte.length === 1 ? 'poder' : 'poderes' %>)
                </div>
                <button type="button" class="power-type-toggle" data-target="<%= fonte %>">
                  <span class="toggle-icon">📂</span>
                </button>
              </div>
              
              <div class="powers-list" id="powersGrid-<%= fonte %>">
                <% poderesFonte.forEach(poder => { %>
                  <div class="character-power-card" 
                       data-source="<%= poder.fonte || fonte %>" 
                       data-type="<%= poder.tipo || 'geral' %>">
                    
                    <div class="character-power-header">
                      <h5 class="character-power-name">
                        <%= getPowerIcon(poder, poder.fonte || fonte) %> <%= poder.nome %>
                      </h5>
                      
                      <span class="character-power-source-badge">
                        <%= sourceIcon %> <%= sourceName.replace('Poderes ', '') %>
                      </span>
                    </div>
                    
                    <div class="character-power-description">
                      <%= poder.descricao || 'Descrição não disponível' %>
                    </div>
                    
                    <% if (poder.pre_requisitos || poder.custo_pm || poder.efeito_especial || poder.observacoes || poder.nivel_minimo || poder.alcance || poder.duracao) { %>
                      <div class="character-power-details">
                        <% if (poder.nivel_minimo) { %>
                          <div class="character-power-detail">
                            <div class="character-power-detail-label">📊 Nível Mínimo</div>
                            <p class="character-power-detail-value">Nível <%= poder.nivel_minimo %>+</p>
                          </div>
                        <% } %>
                        
                        <% if (poder.pre_requisitos) { %>
                          <div class="character-power-detail">
                            <div class="character-power-detail-label">📋 Pré-requisitos</div>
                            <p class="character-power-detail-value"><%= poder.pre_requisitos %></p>
                          </div>
                        <% } %>
                        
                        <% if (poder.custo_pm && poder.custo_pm > 0) { %>
                          <div class="character-power-detail">
                            <div class="character-power-detail-label">💙 Custo</div>
                            <p class="character-power-detail-value"><%= poder.custo_pm %> PM</p>
                          </div>
                        <% } %>
                        
                        <% if (poder.alcance && poder.alcance !== 'Pessoal') { %>
                          <div class="character-power-detail">
                            <div class="character-power-detail-label">🎯 Alcance</div>
                            <p class="character-power-detail-value"><%= poder.alcance %></p>
                          </div>
                        <% } %>
                        
                        <% if (poder.duracao && poder.duracao !== 'Instantâneo') { %>
                          <div class="character-power-detail">
                            <div class="character-power-detail-label">⏱️ Duração</div>
                            <p class="character-power-detail-value"><%= poder.duracao %></p>
                          </div>
                        <% } %>
                        
                        <% if (poder.efeito_especial) { %>
                          <div class="character-power-detail">
                            <div class="character-power-detail-label">⚡ Efeito Especial</div>
                            <p class="character-power-detail-value"><%= poder.efeito_especial %></p>
                          </div>
                        <% } %>
                        
                        <% if (poder.observacoes) { %>
                          <div class="character-power-detail">
                            <div class="character-power-detail-label">📝 Observações</div>
                            <p class="character-power-detail-value"><%= poder.observacoes %></p>
                          </div>
                        <% } %>
                      </div>
                    <% } %>
                    
                    <!-- Tags informativos -->
                    <div class="power-tags" style="margin-top: 1rem;">
                      <span class="power-tag">
                        <%= sourceName.replace('Poderes ', '') %>
                      </span>
                      
                      <% if (poder.tipo && poder.tipo !== 'geral') { %>
                        <span class="power-tag" style="background: rgba(37, 40, 80, 0.6);">
                          <%= poder.tipo.charAt(0).toUpperCase() + poder.tipo.slice(1) %>
                        </span>
                      <% } %>
                      
                      <% if (poder.nivel_minimo) { %>
                        <span class="power-tag" style="background: rgba(255, 140, 0, 0.2); color: var(--warning-orange); border-color: var(--warning-orange);">
                          Nível <%= poder.nivel_minimo %>+
                        </span>
                      <% } %>
                      
                      <% if (poder.custo_pm && poder.custo_pm > 0) { %>
                        <span class="power-tag cost">
                          <%= poder.custo_pm %> PM
                        </span>
                      <% } %>
                      
                      <% if (poder.pre_requisitos) { %>
                        <span class="power-tag requirement">
                          Pré-requisitos
                        </span>
                      <% } %>
                      
                      <% if (poder.alcance && poder.alcance !== 'Pessoal') { %>
                        <span class="power-tag">
                          🎯 <%= poder.alcance %>
                        </span>
                      <% } %>

                      <% if (poder.created_at) { %>
                        <span class="power-tag" style="font-size: 0.7rem; opacity: 0.7;">
                          <%= new Date(poder.created_at).toLocaleDateString('pt-BR') %>
                        </span>
                      <% } %>
                    </div>
                  </div>
                <% }); %>
              </div>
            </div>
          <% } %>
        <% }); %>
      </div>
    <% } else { %>
      <!-- Lista simples (fallback se não há organização por tipo) -->
      <div class="powers-list">
        <% poderes.forEach(poder => { %>
          <div class="character-power-card" 
               data-source="<%= poder.fonte %>" 
               data-type="<%= poder.tipo || 'geral' %>">
            
            <div class="character-power-header">
              <h5 class="character-power-name">
                <%= getPowerIcon(poder, poder.fonte || poder.tipo) %> <%= poder.nome %>
              </h5>
              
              <span class="character-power-source-badge">
                <% 
                  let sourceIcon = '📝';
                  let sourceText = poder.fonte || 'geral';
                  switch(poder.fonte) {
                    case 'raca': sourceIcon = '🧬'; sourceText = 'Racial'; break;
                    case 'classe': sourceIcon = '⚔️'; sourceText = 'Classe'; break;
                    case 'escolha': sourceIcon = '⚡'; sourceText = 'Escolhido'; break;
                    case 'deus': sourceIcon = '⭐'; sourceText = 'Divino'; break;
                    default: sourceIcon = '📝'; sourceText = 'Outro'; break;
                  }
                %>
                <%= sourceIcon %> <%= sourceText %>
              </span>
            </div>
            
            <div class="character-power-description">
              <%= poder.descricao || 'Descrição não disponível' %>
            </div>
            
            <% if (poder.observacoes || poder.nivel_minimo || poder.custo_pm) { %>
              <div class="character-power-details">
                <% if (poder.nivel_minimo) { %>
                  <div class="character-power-detail">
                    <div class="character-power-detail-label">📊 Nível Mínimo</div>
                    <p class="character-power-detail-value">Nível <%= poder.nivel_minimo %>+</p>
                  </div>
                <% } %>
                
                <% if (poder.custo_pm && poder.custo_pm > 0) { %>
                  <div class="character-power-detail">
                    <div class="character-power-detail-label">💙 Custo</div>
                    <p class="character-power-detail-value"><%= poder.custo_pm %> PM</p>
                  </div>
                <% } %>
                
                <% if (poder.observacoes) { %>
                  <div class="character-power-detail">
                    <div class="character-power-detail-label">📝 Observações</div>
                    <p class="character-power-detail-value"><%= poder.observacoes %></p>
                  </div>
                <% } %>
              </div>
            <% } %>
          </div>
        <% }); %>
      </div>
    <% } %>
    
    <!-- Resumo dos Poderes -->
    <div class="powers-summary" style="margin-top: 2rem; padding: 1.5rem; background: rgba(212, 175, 55, 0.1); border: 2px solid var(--accent-gold); border-radius: 12px;">
      <h4 style="color: var(--accent-gold); margin-bottom: 1rem; text-align: center;">
        📊 Resumo dos Poderes
      </h4>
      
      <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem;">
        <% 
          // Contar poderes por fonte
          const poderesPorFonte = {};
          if (poderes && poderes.length > 0) {
            poderes.forEach(poder => {
              const fonte = poder.fonte || 'geral';
              if (!poderesPorFonte[fonte]) {
                poderesPorFonte[fonte] = 0;
              }
              poderesPorFonte[fonte]++;
            });
          }
        %>
        
        <div class="summary-item" style="text-align: center; background: rgba(37, 40, 80, 0.6); padding: 1rem; border-radius: 8px;">
          <div style="font-size: 2rem; margin-bottom: 0.5rem;">📊</div>
          <div style="color: var(--accent-gold); font-weight: bold; font-size: 1.8rem;"><%= poderes.length %></div>
          <div style="color: var(--text-muted); font-size: 0.9rem;">Total de Poderes</div>
        </div>
        
        <% if (Object.keys(poderesPorFonte).length > 0) { %>
          <% Object.entries(poderesPorFonte).forEach(([fonte, count]) => { %>
            <div class="summary-item" style="text-align: center; background: rgba(37, 40, 80, 0.6); padding: 1rem; border-radius: 8px;">
              <div style="font-size: 2rem; margin-bottom: 0.5rem;">
                <% 
                  let sourceIcon = '📝';
                  let sourceName = fonte;
                  switch(fonte) {
                    case 'raca': sourceIcon = '🧬'; sourceName = 'Raciais'; break;
                    case 'classe': sourceIcon = '⚔️'; sourceName = 'de Classe'; break;
                    case 'escolha': sourceIcon = '⚡'; sourceName = 'Escolhidos'; break;
                    case 'deus': sourceIcon = '⭐'; sourceName = 'Divinos'; break;
                  }
                %>
                <%= sourceIcon %>
              </div>
              <div style="color: var(--accent-gold); font-weight: bold; font-size: 1.8rem;"><%= count %></div>
              <div style="color: var(--text-muted); font-size: 0.9rem;"><%= sourceName %></div>
            </div>
          <% }); %>
        <% } %>
      </div>
    </div>

  <!-- CASO 2: SEM PODERES -->
  <% } else { %>
    <div class="powers-empty-state">
      <div class="powers-empty-icon">📜</div>
      <h4 class="powers-empty-title">Nenhum Poder Ativo</h4>
      <p class="powers-empty-description">
        Este personagem ainda não possui poderes especiais.
        <br>
        <% if (character && character.classe_nome) { %>
          <strong>Classe:</strong> <%= character.classe_nome %> - <strong>Nível:</strong> <%= character.nivel || 1 %>
          <br>
        <% } %>
        <strong>💡 Dica:</strong> Use a edição para selecionar poderes de classe e outros poderes.
        <br>
        <a href="/personagens/<%= character.id %>/editar" style="color: var(--accent-gold); text-decoration: none;">
          ✏️ Editar personagem para adicionar poderes
        </a>
      </p>

      <!-- Ações rápidas -->
      <div style="margin-top: 1rem;">
        <a href="/personagens/<%= character.id %>/editar" class="btn btn-secondary">
          ✏️ Adicionar Poderes
        </a>
      </div>
    </div>
  <% } %>
</div>

    <!-- História e Personalidade -->
    <% if (character.historia_pessoal || character.personalidade || character.objetivos) { %>
      <div class="background-section">
        <h3>📜 História e Personalidade</h3>
        <div class="background-grid">
          <% if (character.historia_pessoal) { %>
            <div class="background-card">
              <h4>📖 História Pessoal</h4>
              <div class="background-content">
                <p><%= character.historia_pessoal %></p>
              </div>
            </div>
          <% } %>
          
          <% if (character.personalidade) { %>
            <div class="background-card">
              <h4>🎭 Personalidade</h4>
              <div class="background-content">
                <p><%= character.personalidade %></p>
              </div>
            </div>
          <% } %>
          
          <% if (character.objetivos) { %>
            <div class="background-card">
              <h4>🎯 Objetivos e Motivações</h4>
              <div class="background-content">
                <p><%= character.objetivos %></p>
              </div>
            </div>
          <% } %>
        </div>
      </div>
    <% } %>

    <!-- Informações Técnicas -->
    <div class="technical-info">
      <h3>ℹ️ Informações do Sistema</h3>
      <div class="tech-grid">
        <div class="tech-card">
          <h4>📅 Criação</h4>
          <p><%= new Date(character.created_at).toLocaleDateString('pt-BR', { 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
          }) %></p>
        </div>
        
        <% if (character.updated_at && character.updated_at !== character.created_at) { %>
          <div class="tech-card">
            <h4>✏️ Última Edição</h4>
            <p><%= new Date(character.updated_at).toLocaleDateString('pt-BR', { 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric',
              hour: '2-digit',
              minute: '2-digit'
            }) %></p>
          </div>
        <% } %>
        
        <div class="tech-card">
          <h4>🆔 ID do Personagem</h4>
          <p><code>#<%= character.id %></code></p>
        </div>
      </div>
    </div>

    <!-- Ações Adicionais -->
    <div class="additional-actions">
      <div class="actions-card">
        <h3>🛠️ Ações Disponíveis</h3>
        <div class="actions-grid">
          <button class="action-btn utility-btn" onclick="window.print()">
            🖨️ Imprimir Ficha
          </button>
          
          <button class="action-btn utility-btn" onclick="exportCharacter()">
            📥 Exportar Dados
          </button>
          
          <button class="action-btn utility-btn" onclick="shareCharacter()">
            📤 Compartilhar
          </button>
          
          <button class="action-btn danger-btn" onclick="confirmDelete()">
            🗑️ Excluir Personagem
          </button>
        </div>
      </div>
    </div>
  </section>

  <!-- Modal de Confirmação de Exclusão -->
  <div id="deleteModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h3>⚠️ Confirmar Exclusão</h3>
      </div>
      <div class="modal-body">
        <p>Tem certeza que deseja excluir o personagem <strong><%= character.nome %></strong>?</p>
        <p class="warning-text">Esta ação não pode ser desfeita!</p>
      </div>
      <div class="modal-actions">
        <button class="btn btn-secondary" onclick="closeDeleteModal()">Cancelar</button>
        <button class="btn btn-danger" onclick="deleteCharacter()">🗑️ Excluir Personagem</button>
      </div>
    </div>
  </div>

<% } else { %>
  <!-- Personagem não encontrado -->
  <section class="content-section active">
    <div class="error-state">
      <div class="error-card">
        <div class="error-icon">😔</div>
        <h2>Personagem Não Encontrado</h2>
        <p>O personagem que você está procurando não existe ou você não tem permissão para visualizá-lo.</p>
        <div class="error-actions">
          <a href="/personagens" class="nav-btn">📋 Meus Personagens</a>
          <a href="/personagens/criar" class="btn btn-secondary">✨ Criar Novo</a>
        </div>
      </div>
    </div>
  </section>
<% } %>

<!-- Script específico para visualização de personagem -->
<script src="/scripts/character-view.js"></script>

<%- include('../partials/footer') %>