<%- include('../partials/header', { title: 'Registro', activePage: 'register' }) %>

<section class="content-section active auth-section">
  <div class="auth-hero">
    <h2>✨ Junte-se aos Heróis</h2>
    <p>Crie sua conta e comece a forjar lendas no mundo de Arton</p>
  </div>
  
  <% if (typeof error !== 'undefined') { %>
    <div class="error-message">
      ⚠️ <%= error %>
    </div>
  <% } %>
  
  <div class="auth-container">
    <div class="auth-card">
      <div class="auth-header">
        <div class="auth-icon">🛡️</div>
        <h3>Torne-se um Aventureiro</h3>
        <p>Sua jornada épica começa aqui</p>
      </div>
      
      <form action="/register" method="POST" class="auth-form" id="registerForm">
        <div class="form-group">
          <label for="username">👤 Nome de Usuário</label>
          <input type="text" id="username" name="username" required 
                 placeholder="Escolha um nome único"
                 autocomplete="username"
                 minlength="3" maxlength="50">
          <div class="input-icon">👤</div>
          <small>Mínimo 3 caracteres, será usado para identificá-lo</small>
        </div>
        
        <div class="form-group">
          <label for="email">📧 Email</label>
          <input type="email" id="email" name="email" required 
                 placeholder="seu.email@exemplo.com"
                 autocomplete="email">
          <div class="input-icon">📧</div>
          <small>Para recuperação de conta e notificações importantes</small>
        </div>
        
        <div class="form-group">
          <label for="password">🔑 Senha</label>
          <input type="password" id="password" name="password" required 
                 placeholder="Crie uma senha segura"
                 autocomplete="new-password"
                 minlength="6">
          <div class="input-icon">🔑</div>
          <div class="password-strength" id="passwordStrength">
            <div class="strength-bar"></div>
            <span class="strength-text">Digite uma senha</span>
          </div>
        </div>
        
        <div class="form-group">
          <label for="confirmPassword">🔐 Confirmar Senha</label>
          <input type="password" id="confirmPassword" name="confirmPassword" required 
                 placeholder="Digite a senha novamente"
                 autocomplete="new-password"
                 minlength="6">
          <div class="input-icon">🔐</div>
          <div class="password-match" id="passwordMatch"></div>
        </div>
        
        <div class="form-terms">
          <label class="checkbox-container">
            <input type="checkbox" id="acceptTerms" required>
            <span class="checkmark"></span>
            Aceito os <a href="#" class="terms-link">termos de uso</a> e 
            <a href="#" class="privacy-link">política de privacidade</a>
          </label>
        </div>
        
        <div class="form-actions">
          <button type="submit" class="nav-btn register-btn" disabled>
            🎯 Criar Conta de Aventureiro
          </button>
        </div>
      </form>
      
      <div class="auth-divider">
        <span>ou</span>
      </div>
      
      <div class="auth-links">
        <p>Já possui uma conta?</p>
        <a href="/login" class="login-link">
          🔐 Fazer Login
        </a>
      </div>
    </div>
    
    <!-- Benefícios de Criar Conta -->
    <div class="benefits-info">
      <div class="card benefits-card">
        <h4>🏆 Benefícios da Conta</h4>
        <ul>
          <li>📋 Personagens ilimitados</li>
          <li>💾 Salvamento automático</li>
          <li>🔄 Sincronização entre dispositivos</li>
          <li>📊 Histórico de personagens</li>
          <li>🎲 Ferramentas avançadas</li>
          <li>⚡ Atualizações automáticas</li>
        </ul>
      </div>
      
      <div class="card security-card">
        <h4>🔒 Segurança Garantida</h4>
        <ul>
          <li>🛡️ Criptografia de dados</li>
          <li>🔐 Senhas hash protegidas</li>
          <li>🚫 Nunca compartilhamos seus dados</li>
          <li>💻 Acesso seguro via HTTPS</li>
          <li>🔄 Backup regular dos dados</li>
          <li>📱 Acesso multi-dispositivo</li>
        </ul>
      </div>
      
      <div class="card quick-start-card">
        <h4>🚀 Primeiros Passos</h4>
        <ol>
          <li>📝 Complete o cadastro</li>
          <li>🧝 Explore raças e classes</li>
          <li>✨ Crie seu primeiro personagem</li>
          <li>⚔️ Comece suas aventuras!</li>
        </ol>
      </div>
    </div>
  </div>
</section>

<style>
/* Estilos específicos para registro (herda do login) */
.benefits-info {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.benefits-card {
  background: linear-gradient(135deg, var(--card-bg) 0%, rgba(74, 170, 153, 0.1) 100%);
  border: 2px solid var(--success-green);
}

.security-card {
  background: linear-gradient(135deg, var(--card-bg) 0%, rgba(79, 195, 247, 0.1) 100%);
  border: 2px solid #4fc3f7;
}

.quick-start-card {
  background: linear-gradient(135deg, var(--card-bg) 0%, rgba(255, 140, 0, 0.1) 100%);
  border: 2px solid var(--warning-orange);
}

.benefits-card h4,
.security-card h4,
.quick-start-card h4 {
  color: var(--accent-gold);
  margin-bottom: 1rem;
  font-size: 1.2rem;
  text-align: center;
  border-bottom: 2px solid var(--accent-gold);
  padding-bottom: 0.5rem;
}

.quick-start-card ol {
  list-style: none;
  padding: 0;
  counter-reset: step-counter;
}

.quick-start-card li {
  background: rgba(37, 40, 80, 0.6);
  margin: 0.5rem 0;
  padding: 0.8rem;
  border-radius: 6px;
  border-left: 3px solid var(--warning-orange);
  color: var(--text-light);
  counter-increment: step-counter;
  position: relative;
  padding-left: 3rem;
}

.quick-start-card li::before {
  content: counter(step-counter);
  position: absolute;
  left: 1rem;
  top: 50%;
  transform: translateY(-50%);
  background: var(--warning-orange);
  color: var(--primary-bg);
  width: 24px;
  height: 24px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  font-size: 0.8rem;
}

/* Password Strength Indicator */
.password-strength {
  margin-top: 0.5rem;
}

.strength-bar {
  height: 4px;
  background: var(--border-color);
  border-radius: 2px;
  overflow: hidden;
  margin-bottom: 0.3rem;
  position: relative;
}

.strength-bar::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 0%;
  transition: all 0.3s ease;
  border-radius: 2px;
}

.strength-bar.weak::after {
  width: 25%;
  background: var(--error-red);
}

.strength-bar.fair::after {
  width: 50%;
  background: var(--warning-orange);
}

.strength-bar.good::after {
  width: 75%;
  background: #66bb6a;
}

.strength-bar.strong::after {
  width: 100%;
  background: var(--success-green);
}

.strength-text {
  font-size: 0.8rem;
  color: var(--text-muted);
}

.strength-text.weak {
  color: var(--error-red);
}

.strength-text.fair {
  color: var(--warning-orange);
}

.strength-text.good {
  color: #66bb6a;
}

.strength-text.strong {
  color: var(--success-green);
}

/* Password Match Indicator */
.password-match {
  margin-top: 0.5rem;
  font-size: 0.8rem;
  font-weight: 600;
}

.password-match.match {
  color: var(--success-green);
}

.password-match.no-match {
  color: var(--error-red);
}

/* Terms Checkbox */
.form-terms {
  margin: 1.5rem 0;
}

.checkbox-container {
  display: flex;
  align-items: flex-start;
  cursor: pointer;
  font-size: 0.9rem;
  line-height: 1.4;
  gap: 0.8rem;
}

.checkbox-container input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

.checkmark {
  width: 20px;
  height: 20px;
  background: var(--secondary-bg);
  border: 2px solid var(--border-color);
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
  flex-shrink: 0;
  margin-top: 0.1rem;
}

.checkbox-container:hover .checkmark {
  border-color: var(--accent-gold);
}

.checkbox-container input:checked ~ .checkmark {
  background: var(--accent-gold);
  border-color: var(--accent-gold);
}

.checkbox-container input:checked ~ .checkmark::after {
  content: '✓';
  color: var(--primary-bg);
  font-weight: bold;
  font-size: 0.8rem;
}

.terms-link,
.privacy-link {
  color: var(--accent-gold);
  text-decoration: none;
}

.terms-link:hover,
.privacy-link:hover {
  text-decoration: underline;
}

/* Register Button */
.register-btn {
  width: 100%;
  padding: 1rem;
  font-size: 1.1rem;
  font-weight: bold;
  background: var(--gradient-gold);
  transition: all 0.3s ease;
}

.register-btn:disabled {
  background: linear-gradient(135deg, #6c757d, #5a6268);
  cursor: not-allowed;
  opacity: 0.6;
}

.register-btn:not(:disabled):hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
  filter: brightness(1.1);
}

.login-link {
  display: inline-block;
  color: var(--accent-gold);
  text-decoration: none;
  padding: 0.8rem 1.5rem;
  border: 2px solid var(--accent-gold);
  border-radius: 8px;
  transition: all 0.3s ease;
  font-weight: 600;
}

.login-link:hover {
  background: var(--accent-gold);
  color: var(--primary-bg);
  transform: translateY(-2px);
}

/* Form enhancements */
.auth-form .form-group small {
  display: block;
  color: var(--text-muted);
  font-size: 0.8rem;
  margin-top: 0.3rem;
  font-style: italic;
}

/* Responsivo */
@media (max-width: 768px) {
  .checkbox-container {
    font-size: 0.85rem;
  }
  
  .quick-start-card li {
    padding-left: 2.5rem;
  }
  
  .quick-start-card li::before {
    left: 0.8rem;
    width: 20px;
    height: 20px;
    font-size: 0.7rem;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('registerForm');
  const passwordInput = document.getElementById('password');
  const confirmPasswordInput = document.getElementById('confirmPassword');
  const submitBtn = document.querySelector('.register-btn');
  const termsCheckbox = document.getElementById('acceptTerms');
  
  // Password strength checker
  function checkPasswordStrength(password) {
    const strengthBar = document.querySelector('.strength-bar');
    const strengthText = document.querySelector('.strength-text');
    
    if (password.length === 0) {
      strengthBar.className = 'strength-bar';
      strengthText.textContent = 'Digite uma senha';
      strengthText.className = 'strength-text';
      return 0;
    }
    
    let score = 0;
    const checks = {
      length: password.length >= 8,
      lowercase: /[a-z]/.test(password),
      uppercase: /[A-Z]/.test(password),
      numbers: /\d/.test(password),
      special: /[!@#$%^&*(),.?":{}|<>]/.test(password)
    };
    
    score = Object.values(checks).filter(Boolean).length;
    
    if (score <= 1) {
      strengthBar.className = 'strength-bar weak';
      strengthText.textContent = 'Muito fraca';
      strengthText.className = 'strength-text weak';
      return 1;
    } else if (score <= 2) {
      strengthBar.className = 'strength-bar fair';
      strengthText.textContent = 'Fraca';
      strengthText.className = 'strength-text fair';
      return 2;
    } else if (score <= 3) {
      strengthBar.className = 'strength-bar good';
      strengthText.textContent = 'Boa';
      strengthText.className = 'strength-text good';
      return 3;
    } else {
      strengthBar.className = 'strength-bar strong';
      strengthText.textContent = 'Forte';
      strengthText.className = 'strength-text strong';
      return 4;
    }
  }
  
  // Password match checker
  function checkPasswordMatch() {
    const password = passwordInput.value;
    const confirmPassword = confirmPasswordInput.value;
    const matchIndicator = document.getElementById('passwordMatch');
    
    if (confirmPassword.length === 0) {
      matchIndicator.textContent = '';
      matchIndicator.className = 'password-match';
      return false;
    }
    
    if (password === confirmPassword) {
      matchIndicator.textContent = '✅ Senhas coincidem';
      matchIndicator.className = 'password-match match';
      return true;
    } else {
      matchIndicator.textContent = '❌ Senhas não coincidem';
      matchIndicator.className = 'password-match no-match';
      return false;
    }
  }
  
  // Validate form
  function validateForm() {
    const username = document.getElementById('username').value;
    const email = document.getElementById('email').value;
    const password = passwordInput.value;
    const confirmPassword = confirmPasswordInput.value;
    const termsAccepted = termsCheckbox.checked;
    
    const isValid = 
      username.length >= 3 &&
      email.includes('@') &&
      password.length >= 6 &&
      password === confirmPassword &&
      termsAccepted;
    
    submitBtn.disabled = !isValid;
  }
  
  // Event listeners
  passwordInput.addEventListener('input', function() {
    checkPasswordStrength(this.value);
    checkPasswordMatch();
    validateForm();
  });
  
  confirmPasswordInput.addEventListener('input', function() {
    checkPasswordMatch();
    validateForm();
  });
  
  document.getElementById('username').addEventListener('input', validateForm);
  document.getElementById('email').addEventListener('input', validateForm);
  termsCheckbox.addEventListener('change', validateForm);
  
  // Input focus effects
  const inputs = form.querySelectorAll('input[type="text"], input[type="email"], input[type="password"]');
  inputs.forEach(input => {
    input.addEventListener('focus', function() {
      this.parentNode.classList.add('focused');
    });
    
    input.addEventListener('blur', function() {
      if (!this.value) {
        this.parentNode.classList.remove('focused');
      }
    });
  });
  
  // Form submission
  form.addEventListener('submit', function(e) {
    e.preventDefault();
    
    if (submitBtn.disabled) {
      return;
    }
    
    // Visual feedback
    const originalText = submitBtn.textContent;
    submitBtn.textContent = '🔄 Criando conta...';
    submitBtn.disabled = true;
    
    // Log data for debugging
    const formData = new FormData(form);
    const data = {};
    formData.forEach((value, key) => {
      if (key !== 'password' && key !== 'confirmPassword') {
        data[key] = value;
      }
    });
    console.log('Dados de registro:', data);
    
    // Submit after delay
    setTimeout(() => {
      form.submit();
    }, 800);
  });
  
  // Initialize validation
  validateForm();
});
</script>

<%- include('../partials/footer') %>